unit PressCounter;

interface
uses Graphics, key;
type
TMyLabel = record
    Caption: string;
    Font: TFont;
    PosX: Integer;
  end;


TKeyImage=record
  color: TColor;
  UpLabel: TMyLabel;
  MidLabel: TMyLabel;
  DownLabel: TMyLabel;
end;

TkeyMas = array[0..222] of TKeyImage;

TStatistic = class
  private
  fkeyMas: TKeyMas;
  function GetHigh:byte;
  function GetLow:byte;
  public
  property firstItem: byte read getLow;
  property lastItem: byte read getHigh;
  procedure saveKey(item: byte; MyKey: TKey);
  procedure ShowStatistic(var MyKey: Tkey; filePath:string);
end;

implementation

{ TKeysSaver }

function TStatistic.GetHigh: byte;
begin
    result:=High(fkeyMas);
end;

function TStatistic.GetLow: byte;
begin
    result:=low(FkeyMas);
end;

procedure TStatistic.saveKey(item: byte; MyKey: TKey);
var a:byte;
begin
    with FKeymas[item] do
    begin
      color:=MyKey.Color;
      UpLabel.Caption:=MyKey.UpText;
      UpLabel.Font:=MyKey.UpFont;
      UpLabel.PosX:=MyKey.UpPosX;
      MidLabel.Caption:=MyKey.MiddleText;
      MidLabel.Font:=MyKey.MiddleFont;
      MidLabel.PosX:=MyKey.MidPosX;
      DownLabel.Caption:=MyKey.DownText;
      DownLabel.Font:=MyKey.DownFont;
      DownLabel.PosX:=MyKey.DownPosX;
    end;

end;

procedure TStatistic.ShowStatistic(var MyKey: Tkey; filePath:string);
begin

end;

end.
