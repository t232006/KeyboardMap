unit PressCounter;

interface
uses Graphics, key, sysutils;
type
TMyLabel = record
    Caption: string;
    Font: TFont;
    PosX: Integer;
  end;


TKeyImage=record
  color: TColor;
  //UpLabel: TMyLabel;
  UpText, DownText: string;
  MidLabel: TMyLabel;
  //DownLabel: TMyLabel;
end;

TkeyMas = array[0..222] of TKeyImage;

TStatistic = class
  private
  fkeyMas: TKeyMas;
  f:file of Word;
  function GetHigh:byte;
  function GetLow:byte;
  public
  property firstItem: byte read getLow;
  property lastItem: byte read getHigh;
  procedure saveKey(item: byte; var MyKey: TKey);
  procedure ShowStatistic(item: byte;var MyKey: Tkey);
  procedure Init(mapPath: string);
  destructor Destroy;
end;

implementation

{ TKeysSaver }

destructor TStatistic.Destroy;
begin
  close(f);
end;

function TStatistic.GetHigh: byte;
begin
    result:=High(fkeyMas);
end;

function TStatistic.GetLow: byte;
begin
    result:=low(FkeyMas);
end;

procedure TStatistic.Init(mapPath: string);
begin
  assignfile(f,mapPath);
  reset(f);
end;

procedure TStatistic.saveKey(item: byte; var MyKey: TKey);
var a:byte;
begin
    with MyKey do
    begin
      color:=Color;
      UpText:=UpText;
      //UpLabel.Font:=MyKey.UpFont;
      //UpLabel.PosX:=MyKey.UpPosX;
      FKeymas[item].MidLabel.Caption:=MiddleText;
      FKeymas[item].MidLabel.Font:=MiddleFont;
      FKeymas[item].MidLabel.PosX:=MidPosX;
      DownText:=DownText;
      //DownLabel.Font:=MyKey.DownFont;
      //DownLabel.PosX:=MyKey.DownPosX;
      UpText:='';
      DownText:='';
      HidePicture:=true;
      MyKey.active:=false;
    end;
end;

procedure TStatistic.ShowStatistic(item: byte; var MyKey: Tkey);
var n:word;
begin
   seek(f,item);
   read(f,n);
   MyKey.MiddleText:=inttostr(n);
end;

end.
